{"version":3,"file":"app~e4317507.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/routes/routes.js","webpack://restaurant-apps/./src/scripts/routes/urls-parser.js","webpack://restaurant-apps/./src/scripts/utils/drawer-initiator.js","webpack://restaurant-apps/./src/scripts/utils/like-button-presenter.js","webpack://restaurant-apps/./src/scripts/utils/sw-register.js","webpack://restaurant-apps/./src/scripts/utils/notification-helper.js","webpack://restaurant-apps/./src/scripts/utils/websocket-initiator.js"],"sourcesContent":["import Home from '../views/pages/home'\r\nimport Detail from '../views/pages/detail'\r\nimport Favorite from '../views/pages/favorite'\r\n\r\nconst routes = {\r\n  '/': Home, // default page\r\n  '/home': Home,\r\n  '/detail/:id': Detail,\r\n  '/favorite': Favorite\r\n}\r\n\r\nexport default routes\r\n","/* eslint-disable no-underscore-dangle */\r\nconst UrlParser = {\r\n  parseActiveUrlWithCombiner () {\r\n    const url = window.location.hash.slice(1).toLowerCase()\r\n    const splitedUrl = this._urlSplitter(url)\r\n    return this._urlCombiner(splitedUrl)\r\n  },\r\n\r\n  parseActiveUrlWithoutCombiner () {\r\n    const url = window.location.hash.slice(1).toLowerCase()\r\n    return this._urlSplitter(url)\r\n  },\r\n\r\n  _urlSplitter (url) {\r\n    const urlsSplits = url.split('/')\r\n    return {\r\n      resource: urlsSplits[1] || null,\r\n      id: urlsSplits[2] || null,\r\n      verb: urlsSplits[3] || null\r\n    }\r\n  },\r\n\r\n  _urlCombiner (splitedUrl) {\r\n    return (\r\n      (splitedUrl.resource ? `/${splitedUrl.resource}` : '/') +\r\n        (splitedUrl.id ? '/:id' : '') +\r\n        (splitedUrl.verb ? `/${splitedUrl.verb}` : '')\r\n    )\r\n  }\r\n}\r\n\r\nexport default UrlParser\r\n","/* eslint-disable no-underscore-dangle */\r\nconst DrawerInitiator = {\r\n  init ({ button, drawer, content }) {\r\n    button.addEventListener('click', (event) => {\r\n      this._toggleDrawer(event, drawer)\r\n    })\r\n\r\n    content.addEventListener('click', (event) => {\r\n      this._closeDrawer(event, drawer)\r\n    })\r\n  },\r\n\r\n  _toggleDrawer (event, drawer) {\r\n    event.stopPropagation()\r\n    drawer.classList.toggle('open')\r\n  },\r\n\r\n  _closeDrawer (event, drawer) {\r\n    event.stopPropagation()\r\n    drawer.classList.remove('open')\r\n  }\r\n}\r\n\r\nexport default DrawerInitiator\r\n","/* eslint-disable no-underscore-dangle */\r\nimport FavoriteRestaurantIdb from '../data/favoriterestaurant-idb'\r\nimport {\r\n  createLikeButtonTemplate,\r\n  createLikedButtonTemplate\r\n} from '../views/templates/template-creator'\r\n\r\nconst LikeButtonInitiator = {\r\n  async init ({ likeButtonContainer, restaurant }) {\r\n    this._likeButtonContainer = likeButtonContainer\r\n    this._restaurant = restaurant\r\n\r\n    await this._renderButton()\r\n  },\r\n\r\n  async _renderButton () {\r\n    const { id } = this._restaurant\r\n\r\n    if (await this._isRestaurantExist(id)) {\r\n      this._renderLiked()\r\n    } else {\r\n      this._renderLike()\r\n    }\r\n  },\r\n\r\n  async _isRestaurantExist (id) {\r\n    const restaurant = await FavoriteRestaurantIdb.getRestaurant(id)\r\n    return !!restaurant\r\n  },\r\n\r\n  _renderLike () {\r\n    this._likeButtonContainer.innerHTML = createLikeButtonTemplate()\r\n\r\n    const likeButton = document.querySelector('#likeButton')\r\n    likeButton.addEventListener('click', async () => {\r\n      await FavoriteRestaurantIdb.putRestaurant(this._restaurant)\r\n      this._renderButton()\r\n    })\r\n  },\r\n\r\n  _renderLiked () {\r\n    this._likeButtonContainer.innerHTML = createLikedButtonTemplate()\r\n\r\n    const likeButton = document.querySelector('#likeButton')\r\n    likeButton.addEventListener('click', async () => {\r\n      await FavoriteRestaurantIdb.deleteRestaurant(this._restaurant.id)\r\n      this._renderButton()\r\n    })\r\n  }\r\n}\r\n\r\nexport default LikeButtonInitiator\r\n","import * as WorkboxWindow from 'workbox-window'\r\n\r\nconst swRegister = async () => {\r\n  if (!('serviceWorker' in navigator)) {\r\n    console.log('Service Worker not supported in the browser')\r\n    return\r\n  }\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const wb = new WorkboxWindow.Workbox('./sw.bundle.js')\r\n  try {\r\n    await wb.register()\r\n    console.log('Service worker registered')\r\n  } catch (error) {\r\n    console.log('Failed to register service worker', error)\r\n  }\r\n}\r\n\r\nexport default swRegister\r\n","/* eslint-disable no-console */\r\n/* eslint-disable no-underscore-dangle */\r\nconst NotificationHelper = {\r\n  sendNotification ({ title, options }) {\r\n    if (!this._checkAvailability()) {\r\n      console.log('Notification not supported in this browser')\r\n\r\n      return\r\n    }\r\n\r\n    if (!this._checkPermission()) {\r\n      console.log('User did not yet granted permission')\r\n      this._requestPermission()\r\n      return\r\n    }\r\n\r\n    this._showNotification({ title, options })\r\n  },\r\n\r\n  _checkAvailability () {\r\n    return !!('Notification' in window)\r\n  },\r\n\r\n  _checkPermission () {\r\n    return Notification.permission === 'granted'\r\n  },\r\n\r\n  async _requestPermission () {\r\n    const status = await Notification.requestPermission()\r\n\r\n    if (status === 'denied') {\r\n      console.log('Notification Denied')\r\n    }\r\n\r\n    if (status === 'default') {\r\n      console.log('Permission closed')\r\n    }\r\n  },\r\n\r\n  async _showNotification ({ title, options }) {\r\n    const serviceWorkerRegistration = await navigator.serviceWorker.ready\r\n    serviceWorkerRegistration.showNotification(title, options)\r\n  }\r\n}\r\n\r\nexport default NotificationHelper\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-undef */\r\nimport NotificationHelper from './notification-helper'\r\nimport CONFIG from '../globals/config'\r\n\r\nconst WebSocketInitiator = {\r\n  init (url) {\r\n    const webSocket = new WebSocket(url)\r\n    webSocket.onmessage = this._onMessageHandler\r\n  },\r\n\r\n  _onMessageHandler (message) {\r\n    // eslint-disable-next-line no-unused-vars\r\n    const movie = JSON.parse(message.data)\r\n    NotificationHelper.sendNotification({\r\n      title: `${restaurants.name} is open!`,\r\n      options: {\r\n        body: restaurants.description,\r\n        // eslint-disable-next-line no-undef\r\n        image: CONFIG.BASE_IMAGE_URL + restaurants.pictureId\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default WebSocketInitiator\r\n"],"names":["Home","Detail","Favorite","parseActiveUrlWithCombiner","url","window","location","hash","slice","toLowerCase","splitedUrl","this","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","id","verb","init","button","drawer","content","addEventListener","event","_toggleDrawer","_closeDrawer","stopPropagation","classList","toggle","remove","i","likeButtonContainer","restaurant","_likeButtonContainer","_restaurant","_renderButton","_isRestaurantExist","_renderLiked","_renderLike","FavoriteRestaurantIdb","innerHTML","createLikeButtonTemplate","document","querySelector","createLikedButtonTemplate","navigator","console","log","wb","WorkboxWindow","register","sendNotification","title","options","_checkAvailability","_checkPermission","_showNotification","_requestPermission","Notification","permission","requestPermission","status","serviceWorker","ready","showNotification","WebSocket","onmessage","_onMessageHandler","message","JSON","parse","data","NotificationHelper","restaurants","name","body","description","image","CONFIG","pictureId"],"sourceRoot":""}